{
  "_comments": {
    "description": "Field Mappings Configuration for incident.io ↔ ServiceNow Synchronization",
    "sections": {
      "incident_creation": "Maps incident.io incident fields to ServiceNow fields when creating new incidents",
      "incident_updates": "Maps incident.io incident fields to ServiceNow fields when updating existing incidents", 
      "reverse_mappings": "Maps ServiceNow field values to incident.io values for reverse synchronization",
      "validation_rules": "Defines field validation requirements and constraints"
    },
    "important_notes": [
      "All incident.io severity/status UUIDs must match your organization's configuration",
      "ServiceNow field names should match your ServiceNow table schema",
      "User and reference lookups require the target records to exist in ServiceNow",
      "Field mapping types: text, choice_mapping, reference_lookup, user_lookup, expression"
    ]
  },
  "incident_creation": {
    "short_description": {
      "source": "incident.name",
      "type": "text",
      "required": true,
      "description": "Maps incident.io incident name to ServiceNow short description"
    },
    "description": {
      "source": "incident.summary",
      "type": "text",
      "fallback": "No summary provided",
      "description": "Maps incident.io summary to ServiceNow description"
    },
    "assigned_to": {
      "source": "incident.incident_lead.name",
      "type": "user_lookup",
      "lookup_field": "name",
      "lookup_table": "sys_user",
      "fallback": null,
      "description": "Look up ServiceNow user by name from incident.io incident lead"
    },
    "service": {
      "source": "incident.incident_type.name",
      "type": "reference_lookup",
      "lookup_table": "cmdb_ci_service",
      "lookup_field": "name",
      "fallback": null,
      "description": "Look up ServiceNow service record by name from incident.io incident type"
    },
    "configuration_item": {
      "source": "incident.affected_services[0].name",
      "type": "reference_lookup",
      "lookup_table": "cmdb_ci",
      "lookup_field": "name",
      "fallback": null,
      "description": "Map first affected service to configuration item"
    },
    "urgency": {
      "source": "incident.severity.name",
      "type": "choice_mapping",
      "mappings": {
        "Critical": "1",
        "Major": "2", 
        "Minor": "3",
        "Low": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow urgency"
    },
    "impact": {
      "source": "incident.severity.name",
      "type": "choice_mapping",
      "mappings": {
        "Critical": "1",
        "Major": "2",
        "Minor": "3", 
        "Low": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow impact"
    },
    "caller_id": {
      "source": "incident.creator.name",
      "type": "user_lookup",
      "lookup_field": "name",
      "lookup_table": "sys_user",
      "fallback": null,
      "description": "Look up ServiceNow user by name from incident.io creator"
    },
    "u_incident_io_id": {
      "source": "incident.id",
      "type": "text",
      "required": true,
      "description": "Store incident.io ID for tracking"
    },
    "u_incident_io_url": {
      "source": "incident.permalink",
      "type": "text",
      "description": "Store incident.io permalink for easy access"
    },
    "category": {
      "source": "incident.incident_type.name",
      "type": "expression",
      "expression": "value.toLowerCase().includes('security') ? 'Security' : 'Software'",
      "fallback": "Software",
      "description": "Categorize based on incident type using expression"
    }
  },
  "incident_updates": {
    "short_description": {
      "source": "incident.name",
      "type": "text",
      "description": "Update ServiceNow short description from incident.io name"
    },
    "description": {
      "source": "incident.summary", 
      "type": "text",
      "description": "Update ServiceNow description from incident.io summary"
    },
    "work_notes": {
      "source": "incident_update.message", 
      "type": "text",
      "deduplicate": true,
      "dedupe_field": "work_notes",
      "description": "Add incident.io updates as work notes with deduplication"
    },
    "incident_state": {
      "source": "incident.incident_status.name",
      "type": "choice_mapping",
      "mappings": {
        "Triage": "1",
        "Investigating": "2",
        "Fixing": "2",
        "Monitoring": "3",
        "Paused": "3",
        "Documenting": "6", 
        "Reviewing": "6",
        "Closed": "7",
        "Canceled": "8",
        "Declined": "8",
        "Merged": "7"
      },
      "fallback": "2",
      "description": "Map incident.io status to ServiceNow incident_state"
    },
    "urgency": {
      "source": "incident.severity.name",
      "type": "choice_mapping",
      "mappings": {
        "Critical": "1",
        "Major": "2",
        "Minor": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow urgency"
    },
    "impact": {
      "source": "incident.severity.name",
      "type": "choice_mapping",
      "mappings": {
        "Critical": "1",
        "Major": "2", 
        "Minor": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow impact"
    },
    "close_code": {
      "source": "incident.incident_status.category",
      "type": "choice_mapping",
      "mappings": {
        "resolved": "Workaround provided",
        "closed": "Solution provided"
      },
      "condition": "incident.incident_status.category === 'resolved' || incident.incident_status.category === 'closed'",
      "fallback": "Solution provided",
      "description": "Set close code when incident is resolved/closed"
    },
    "close_notes": {
      "source": "incident.postmortem_document_url",
      "type": "expression", 
      "expression": "value ? `Post-mortem available: ${value}` : 'Incident resolved via incident.io integration'",
      "condition": "incident.incident_status.category === 'closed'",
      "fallback": "Incident resolved via incident.io integration",
      "description": "Add close notes when incident is closed"
    }
  },
  "custom_mappings": {
    "priority_calculation": {
      "description": "Calculate priority based on urgency and impact",
      "type": "expression",
      "expression": "Math.min(urgency, impact)",
      "depends_on": ["urgency", "impact"]
    }
  },
  "reverse_mappings": {
    "_comments": {
      "description": "Maps ServiceNow values to incident.io for reverse synchronization (ServiceNow → incident.io)",
      "status_mapping": "Maps ServiceNow incident_state values to incident.io status IDs",
      "severity_mapping": "Maps ServiceNow priority values (1-5) to incident.io severity UUIDs",
      "important": "REPLACE THE UUIDs BELOW WITH YOUR ORGANIZATION'S ACTUAL incident.io SEVERITY UUIDs"
    },
    "status": {
      "_comment": "Maps ServiceNow incident_state to incident.io status IDs (WORKFLOW COMPLIANT ONLY)",
      "1": "01JT3NNT3D4J0DDWS19MQYF0RC",  
      "2": "01JT3NNT3D4J0DDWS19MQYF0RC", 
      "3": "01JT3NNT3D455EB53SWJHK1QST",  
      "6": "01JT3NNT3D73EK2RXFW4GJY310",  
      "7": "01JT3NNT3D73EK2RXFW4GJY310",  
      "8": "01JT3NNT3D73EK2RXFW4GJY310"   
    },
    "severity": {
      "_comments": {
        "priority_1": "Critical priority → Critical severity UUID",
        "priority_2": "High priority → Major severity UUID", 
        "priority_3_5": "Medium/Low/Planning priority → Minor severity UUID",
        "how_to_find_uuids": "Get these from your incident.io organization's severity catalog API"
      },
      "1": "01JT3NNT3DH019S8XA0D9YGJEF",
      "2": "01JT3NNT3DTF8D9ZS7QZPFM9QM", 
      "3": "01JT3NNT3DW44F1KGJ68WDV9R6",
      "4": "01JT3NNT3DW44F1KGJ68WDV9R6",
      "5": "01JT3NNT3DW44F1KGJ68WDV9R6"
    }
  },
  "validation_rules": {
    "required_fields_creation": ["short_description", "u_incident_io_id"],
    "required_fields_update": ["u_incident_io_id"],
    "max_field_lengths": {
      "short_description": 160,
      "work_notes": 4000
    }
  }
}