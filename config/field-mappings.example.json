{
  "incident_creation": {
    "short_description": {
      "source": "incident.name",
      "type": "text",
      "required": true,
      "description": "Maps incident.io incident name to ServiceNow short description"
    },
    "description": {
      "source": "incident.summary",
      "type": "text",
      "fallback": "No summary provided",
      "description": "Maps incident.io summary to ServiceNow description"
    },
    "assigned_to": {
      "source": "incident.incident_lead.name",
      "type": "user_lookup",
      "lookup_field": "name",
      "lookup_table": "sys_user",
      "fallback": null,
      "description": "Look up ServiceNow user by name from incident.io incident lead"
    },
    "service": {
      "source": "incident.incident_type.name",
      "type": "reference_lookup",
      "lookup_table": "cmdb_ci_service",
      "lookup_field": "name",
      "fallback": null,
      "description": "Look up ServiceNow service record by name from incident.io incident type"
    },
    "configuration_item": {
      "source": "incident.affected_services[0].name",
      "type": "reference_lookup",
      "lookup_table": "cmdb_ci",
      "lookup_field": "name",
      "fallback": null,
      "description": "Map first affected service to configuration item"
    },
    "urgency": {
      "source": "incident.severity",
      "type": "choice_mapping",
      "mappings": {
        "critical": "1",
        "high": "2", 
        "medium": "3",
        "low": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow urgency"
    },
    "impact": {
      "source": "incident.severity",
      "type": "choice_mapping",
      "mappings": {
        "critical": "1",
        "high": "2",
        "medium": "3", 
        "low": "3"
      },
      "fallback": "3",
      "description": "Map incident.io severity to ServiceNow impact"
    },
    "caller_id": {
      "source": "incident.creator.name",
      "type": "user_lookup",
      "lookup_field": "name",
      "lookup_table": "sys_user",
      "fallback": null,
      "description": "Look up ServiceNow user by name from incident.io creator"
    },
    "u_incident_io_id": {
      "source": "incident.id",
      "type": "text",
      "required": true,
      "description": "Store incident.io ID for tracking"
    },
    "u_incident_io_url": {
      "source": "incident.permalink",
      "type": "text",
      "description": "Store incident.io permalink for easy access"
    },
    "category": {
      "source": "incident.incident_type.name",
      "type": "expression",
      "expression": "value.toLowerCase().includes('security') ? 'Security' : 'Software'",
      "fallback": "Software",
      "description": "Categorize based on incident type using expression"
    }
  },
  "incident_updates": {
    "work_notes": {
      "source": "incident_update.message", 
      "type": "text",
      "deduplicate": true,
      "dedupe_field": "work_notes",
      "description": "Add incident.io updates as work notes with deduplication"
    },
    "state": {
      "source": "incident.status",
      "type": "choice_mapping",
      "mappings": {
        "triage": "1",
        "investigating": "2",
        "identified": "2",
        "monitoring": "3", 
        "resolved": "6",
        "closed": "7"
      },
      "fallback": "2",
      "description": "Map incident.io status to ServiceNow state"
    },
    "close_code": {
      "source": "incident.status",
      "type": "choice_mapping",
      "mappings": {
        "resolved": "Solved (Work Around)",
        "closed": "Solved (Permanently)"
      },
      "condition": "incident.status === 'resolved' || incident.status === 'closed'",
      "description": "Set close code when incident is resolved/closed"
    },
    "close_notes": {
      "source": "incident.postmortem_document_url",
      "type": "expression", 
      "expression": "value ? `Post-mortem available: ${value}` : null",
      "condition": "incident.status === 'closed' && incident.postmortem_document_url",
      "description": "Add post-mortem link when incident is closed"
    }
  },
  "custom_mappings": {
    "priority_calculation": {
      "description": "Calculate priority based on urgency and impact",
      "type": "expression",
      "expression": "Math.min(urgency, impact)",
      "depends_on": ["urgency", "impact"]
    }
  },
  "validation_rules": {
    "required_fields_creation": ["short_description", "u_incident_io_id"],
    "required_fields_update": ["u_incident_io_id"],
    "max_field_lengths": {
      "short_description": 160,
      "work_notes": 4000
    }
  }
}